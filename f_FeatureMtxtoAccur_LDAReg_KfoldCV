function [KFOLD_Accuracy] = f_FeatureMtxtoAccur_LDAReg_KfoldCV ...
    (featureMatrix,labels, gamma, KFOLD, shufflingTimes)
%This function performs a k-fold cross validation on the input
%dataset and returns the accuracy using regularized LDA. 
%Inputs:
%   featureMatrix: a M-by-N matrix, where M is the number of samples and N 
%   is the number of features.
%   labels: a M-by-1 vector, with the labels of the M samples.
%   gamma: the regularization parameter for LDA. It can be between 0 and 1
%   KFOLD: number of folds in the k-fold cross validation
%   shufflingTimes: number of shuffling times. In the k-fold cross
%   validation, it is necessary to do multiple runs of fold assignment and
%   average the accuracy across these runs (to avoid possibly too good or
%   too bad fold assignments)
accur_shuffles=zeros(1 ,shufflingTimes); % accuracy of each run of k-fold 
% cross validation (new shuffle of folds each time)
for shufflingStep=1:shufflingTimes % looping through all runs of k-fold CV
    indices = crossvalind('Kfold',labels,KFOLD); %fold assignments 
    accur_folds=zeros(1 ,KFOLD); 
    for i= 1:KFOLD %looping through the folds
        test = (indices == i); % setting labels for the training set
        train = ~test; % setting labels for the test set
        class_LDA = fitcdiscr(featureMatrix(train,:),labels(train,:), ...
            'DiscrimType','linear','Gamma',gamma);
        predicted_labels= predict(class_LDA,featureMatrix(test,:));
        accur_folds(1,i) =sum(predicted_labels == labels(test,:))/...
            (length(predicted_labels)); % calculating the accuracy of the 
            % current fold.
    end
    accur_shuffles(:,shufflingStep)=sum(accur_folds,2)/KFOLD;% calculating 
    % the accuracy of the current run (shuffle).
end
KFOLD_Accuracy=sum(accur_shuffles,2)/shufflingTimes; %the average accuracy
% across #shufflingTimes run of K-fold cross validation.
